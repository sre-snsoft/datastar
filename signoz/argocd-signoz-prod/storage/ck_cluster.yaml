apiVersion: clickhouse.altinity.com/v1
kind: ClickHouseInstallation
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: signoz:clickhouse.altinity.com/ClickHouseInstallation:platform/signoz-clickhouse
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"clickhouse.altinity.com/v1","kind":"ClickHouseInstallation","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"signoz:clickhouse.altinity.com/ClickHouseInstallation:platform/signoz-clickhouse"},"labels":{"app.kubernetes.io/component":"clickhouse","app.kubernetes.io/instance":"signoz","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"clickhouse","app.kubernetes.io/version":"24.1.2","helm.sh/chart":"clickhouse-24.1.6"},"name":"signoz-clickhouse","namespace":"platform"},"spec":{"configuration":{"clusters":[{"layout":{"replicasCount":2,"shardsCount":12},"name":"cluster","templates":{"podTemplate":"pod-template"}}],"files":{"events.proto":"syntax = \"proto3\";\nmessage Event {\n  string uuid = 1;\n  string event = 2;\n  string properties = 3;\n  string timestamp = 4;\n  uint64 team_id = 5;\n  string distinct_id = 6;\n  string created_at = 7;\n  string elements_chain = 8;\n}\n    \n"},"profiles":{"default/allow_experimental_window_functions":"1","default/allow_nondeterministic_mutations":"1"},"settings":{"format_schema_path":"/etc/clickhouse-server/config.d/","prometheus/endpoint":"/metrics","prometheus/port":9363,"user_defined_executable_functions_config":"/etc/clickhouse-server/functions/custom-functions.xml","user_scripts_path":"/var/lib/clickhouse/user_scripts/"},"users":{"admin/networks/ip":["10.0.0.0/8","100.64.0.0/10","172.16.0.0/12","192.0.0.0/24","198.18.0.0/15","192.168.0.0/16"],"admin/password":"27ff0399-0d3a-4bd8-919d-17c2181e6fb9","admin/profile":"default","admin/quota":"default"},"zookeeper":{"nodes":[{"host":"signoz-zookeeper-0.signoz-zookeeper-headless","port":2181},{"host":"signoz-zookeeper-1.signoz-zookeeper-headless","port":2181},{"host":"signoz-zookeeper-2.signoz-zookeeper-headless","port":2181},{"host":"signoz-zookeeper-3.signoz-zookeeper-headless","port":2181},{"host":"signoz-zookeeper-4.signoz-zookeeper-headless","port":2181}]}},"defaults":{"templates":{"dataVolumeClaimTemplate":"data-volumeclaim-template","serviceTemplate":"service-template"}},"templates":{"podTemplates":[{"metadata":{"annotations":{"signoz.io/path":"/metrics","signoz.io/port":"9363","signoz.io/scrape":"true"},"labels":{"app.kubernetes.io/component":"clickhouse","app.kubernetes.io/instance":"signoz","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"clickhouse","app.kubernetes.io/version":"24.1.2","helm.sh/chart":"clickhouse-24.1.6"}},"name":"pod-template","spec":{"containers":[{"command":["/bin/bash","-c","/usr/bin/clickhouse-server --config-file=/etc/clickhouse-server/config.xml"],"image":"docker.io/clickhouse/clickhouse-server:24.1.2-alpine","imagePullPolicy":"IfNotPresent","name":"clickhouse","ports":[{"containerPort":8123,"name":"http"},{"containerPort":9000,"name":"client"},{"containerPort":9009,"name":"interserver"}],"resources":{"requests":{"cpu":"4000m","memory":"8000Mi"}},"volumeMounts":[{"mountPath":"/var/lib/clickhouse","name":"data-volumeclaim-template"},{"mountPath":"/var/lib/clickhouse/user_scripts","name":"shared-binary-volume"},{"mountPath":"/etc/clickhouse-server/functions","name":"custom-functions-volume"}]}],"initContainers":[{"command":["sh","-c","set -x\nwget -O /tmp/histogramQuantile https://github.com/SigNoz/signoz/raw/develop/deploy/docker/clickhouse-setup/user_scripts/histogramQuantile\nmv /tmp/histogramQuantile  /var/lib/clickhouse/user_scripts/histogramQuantile\nchmod +x /var/lib/clickhouse/user_scripts/histogramQuantile\n"],"image":"docker.io/alpine:3.18.2","imagePullPolicy":"IfNotPresent","name":"signoz-clickhouse-udf-init","volumeMounts":[{"mountPath":"/var/lib/clickhouse/user_scripts","name":"shared-binary-volume"}]}],"priorityClassName":"","securityContext":{"fsGroup":101,"fsGroupChangePolicy":"OnRootMismatch","runAsGroup":101,"runAsUser":101},"serviceAccountName":"signoz-clickhouse","volumes":[{"emptyDir":{},"name":"shared-binary-volume"},{"configMap":{"name":"signoz-clickhouse-custom-functions"},"name":"custom-functions-volume"}]}}],"serviceTemplates":[{"generateName":"signoz-clickhouse","metadata":{"labels":{"app.kubernetes.io/component":"clickhouse","app.kubernetes.io/instance":"signoz","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"clickhouse","app.kubernetes.io/version":"24.1.2","helm.sh/chart":"clickhouse-24.1.6"}},"name":"service-template","spec":{"ports":[{"name":"http","nodePort":null,"port":8123},{"name":"tcp","nodePort":null,"port":9000}],"type":"ClusterIP"}}],"volumeClaimTemplates":[{"name":"data-volumeclaim-template","reclaimPolicy":"Retain","spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"2Ti"}},"storageClassName":"gp3-resizable"}}]}}}
  creationTimestamp: "2024-10-16T08:20:31Z"
  finalizers:
  - finalizer.clickhouseinstallation.altinity.com
  generation: 7
  labels:
    app.kubernetes.io/component: clickhouse
    app.kubernetes.io/instance: signoz
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/version: 24.1.2
    cluster: signoz-prod
    helm.sh/chart: clickhouse-24.1.6
  name: signoz-clickhouse
  namespace: platform
  resourceVersion: "21730288"
  uid: 71f03fe0-4c49-4f9f-b148-a050112796cf
spec:
  configuration:
    clusters:
    - layout:
        replicasCount: 2
        shardsCount: 12
      name: cluster
      templates:
        podTemplate: pod-template
    files:
      events.proto: "syntax = \"proto3\";\nmessage Event {\n  string uuid = 1;\n  string
        event = 2;\n  string properties = 3;\n  string timestamp = 4;\n  uint64 team_id
        = 5;\n  string distinct_id = 6;\n  string created_at = 7;\n  string elements_chain
        = 8;\n}\n    \n"
    profiles:
      default/allow_experimental_window_functions: "1"
      default/allow_nondeterministic_mutations: "1"
    settings:
      format_schema_path: /etc/clickhouse-server/config.d/
      prometheus/endpoint: /metrics
      prometheus/port: 9363
      user_defined_executable_functions_config: /etc/clickhouse-server/functions/custom-functions.xml
      user_scripts_path: /var/lib/clickhouse/user_scripts/
    users:
      admin/networks/ip:
      - 10.0.0.0/8
      - 100.64.0.0/10
      - 172.16.0.0/12
      - 192.0.0.0/24
      - 198.18.0.0/15
      - 192.168.0.0/16
      admin/password: 27ff0399-0d3a-4bd8-919d-17c2181e6fb9
      admin/profile: default
      admin/quota: default
    zookeeper:
      nodes:
      - host: signoz-zookeeper-0.signoz-zookeeper-headless
        port: 2181
      - host: signoz-zookeeper-1.signoz-zookeeper-headless
        port: 2181
      - host: signoz-zookeeper-2.signoz-zookeeper-headless
        port: 2181
      - host: signoz-zookeeper-3.signoz-zookeeper-headless
        port: 2181
      - host: signoz-zookeeper-4.signoz-zookeeper-headless
        port: 2181
  defaults:
    templates:
      dataVolumeClaimTemplate: data-volumeclaim-template
      serviceTemplate: service-template
  templates:
    podTemplates:
    - metadata:
        annotations:
          signoz.io/path: /metrics
          signoz.io/port: "9363"
          signoz.io/scrape: "true"
        labels:
          app.kubernetes.io/component: clickhouse
          app.kubernetes.io/instance: signoz
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: clickhouse
          app.kubernetes.io/version: 24.1.2
          helm.sh/chart: clickhouse-24.1.6
      name: pod-template
      spec:
        containers:
        - command:
          - /bin/bash
          - -c
          - /usr/bin/clickhouse-server --config-file=/etc/clickhouse-server/config.xml
          image: docker.io/clickhouse/clickhouse-server:24.1.2-alpine
          imagePullPolicy: IfNotPresent
          name: clickhouse
          ports:
          - containerPort: 8123
            name: http
          - containerPort: 9000
            name: client
          - containerPort: 9009
            name: interserver
          resources:
            requests:
              cpu: 4000m
              memory: 8000Mi
          volumeMounts:
          - mountPath: /var/lib/clickhouse
            name: data-volumeclaim-template
          - mountPath: /var/lib/clickhouse/user_scripts
            name: shared-binary-volume
          - mountPath: /etc/clickhouse-server/functions
            name: custom-functions-volume
        initContainers:
        - command:
          - sh
          - -c
          - |
            set -x
            wget -O /tmp/histogramQuantile https://github.com/SigNoz/signoz/raw/develop/deploy/docker/clickhouse-setup/user_scripts/histogramQuantile
            mv /tmp/histogramQuantile  /var/lib/clickhouse/user_scripts/histogramQuantile
            chmod +x /var/lib/clickhouse/user_scripts/histogramQuantile
          image: docker.io/alpine:3.18.2
          imagePullPolicy: IfNotPresent
          name: signoz-clickhouse-udf-init
          volumeMounts:
          - mountPath: /var/lib/clickhouse/user_scripts
            name: shared-binary-volume
        priorityClassName: ""
        securityContext:
          fsGroup: 101
          fsGroupChangePolicy: OnRootMismatch
          runAsGroup: 101
          runAsUser: 101
        serviceAccountName: signoz-clickhouse
        volumes:
        - emptyDir: {}
          name: shared-binary-volume
        - configMap:
            name: signoz-clickhouse-custom-functions
          name: custom-functions-volume
    serviceTemplates:
    - generateName: signoz-clickhouse
      metadata:
        labels:
          app.kubernetes.io/component: clickhouse
          app.kubernetes.io/instance: signoz
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: clickhouse
          app.kubernetes.io/version: 24.1.2
          helm.sh/chart: clickhouse-24.1.6
      name: service-template
      spec:
        ports:
        - name: http
          port: 8123
        - name: tcp
          port: 9000
        type: ClusterIP
    volumeClaimTemplates:
    - name: data-volumeclaim-template
      reclaimPolicy: Retain
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Ti
        storageClassName: gp3-resizable
