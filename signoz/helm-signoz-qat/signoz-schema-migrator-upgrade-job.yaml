apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{"helm.sh/hook":"post-upgrade","helm.sh/hook-delete-policy":"before-hook-creation","helm.sh/hook-weight":"1"},"generation":1,"labels":{"app.kubernetes.io/component":"schema-migrator-upgrade","app.kubernetes.io/info":"Maoshu","app.kubernetes.io/instance":"my-release","app.kubernetes.io/name":"signoz"},"name":"my-release-signoz-schema-migrator-upgrade","namespace":"platform"},"spec":{"backoffLimit":6,"completionMode":"NonIndexed","completions":1,"manualSelector":false,"parallelism":1,"suspend":false,"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"schema-migrator-upgrade","app.kubernetes.io/instance":"my-release","app.kubernetes.io/name":"signoz","batch.kubernetes.io/job-name":"my-release-signoz-schema-migrator-upgrade","job-name":"my-release-signoz-schema-migrator-upgrade"}},"spec":{"containers":[{"args":["--dsn","tcp://$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)@my-release-clickhouse:9000","--replication"],"env":[{"name":"CLICKHOUSE_HOST","value":"my-release-clickhouse"},{"name":"CLICKHOUSE_PORT","value":"9000"},{"name":"CLICKHOUSE_HTTP_PORT","value":"8123"},{"name":"CLICKHOUSE_CLUSTER","value":"cluster"},{"name":"CLICKHOUSE_USER","value":"admin"},{"name":"CLICKHOUSE_PASSWORD","value":"27ff0399-0d3a-4bd8-919d-17c2181e6fb9"},{"name":"CLICKHOUSE_SECURE","value":"false"}],"image":"docker.io/signoz/signoz-schema-migrator:0.102.4","imagePullPolicy":"IfNotPresent","name":"schema-migrator","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","initContainers":[{"command":["sh","-c","until wget --user \"$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)\" --spider -q my-release-clickhouse:8123/ping; do echo -e \"waiting for clickhouseDB\"; sleep 5; done; echo -e \"clickhouse ready, starting schema migrator now\";"],"env":[{"name":"CLICKHOUSE_HOST","value":"my-release-clickhouse"},{"name":"CLICKHOUSE_PORT","value":"9000"},{"name":"CLICKHOUSE_HTTP_PORT","value":"8123"},{"name":"CLICKHOUSE_CLUSTER","value":"cluster"},{"name":"CLICKHOUSE_USER","value":"admin"},{"name":"CLICKHOUSE_PASSWORD","value":"27ff0399-0d3a-4bd8-919d-17c2181e6fb9"},{"name":"CLICKHOUSE_SECURE","value":"false"}],"image":"docker.io/busybox:1.35","imagePullPolicy":"IfNotPresent","name":"my-release-signoz-schema-migrator-init","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"},{"command":["sh","-c","echo \"Running clickhouse ready check\"\nwhile true\ndo\n  version=\"$(CLICKHOUSE_VERSION)\"\n  shards=\"$(CLICKHOUSE_SHARDS)\"\n  replicas=\"$(CLICKHOUSE_REPLICAS)\"\n  current_version=\"$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user \"${CLICKHOUSE_USER}\" --password \"${CLICKHOUSE_PASSWORD}\" -q \"SELECT version()\")\"\n  if [ -z \"$current_version\" ]; then\n    echo \"waiting for clickhouse to be ready\"\n    sleep 5\n    continue\n  fi\n  if [ -z \"$(echo \"$current_version\" | grep \"$version\")\" ]; then\n    echo \"expected version: $version, current version: $current_version\"\n    echo \"waiting for clickhouse with correct version\"\n    sleep 5\n    continue\n  fi\n  current_shards=\"$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user \"${CLICKHOUSE_USER}\" --password \"${CLICKHOUSE_PASSWORD}\" -q \"SELECT count(DISTINCT(shard_num)) FROM system.clusters WHERE cluster = '${CLICKHOUSE_CLUSTER}'\")\"\n  if [ -z \"$current_shards\" ]; then\n    echo \"waiting for clickhouse to be ready\"\n    sleep 5\n    continue\n  fi\n  if [ \"$current_shards\" -ne \"$shards\" ]; then\n    echo \"expected shard count: $shards, current shard count: $current_shards\"\n    echo \"waiting for clickhouse with correct shard count\"\n    sleep 5\n    continue\n  fi\n  current_replicas=\"$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user \"${CLICKHOUSE_USER}\" --password \"${CLICKHOUSE_PASSWORD}\" -q \"SELECT count(DISTINCT(replica_num)) FROM system.clusters WHERE cluster = '${CLICKHOUSE_CLUSTER}'\")\"\n  if [ -z \"$current_replicas\" ]; then\n    echo \"waiting for clickhouse to be ready\"\n    sleep 5\n    continue\n  fi\n  if [ \"$current_replicas\" -ne \"$replicas\" ]; then\n    echo \"expected replica count: $replicas, current replica count: $current_replicas\"\n    echo \"waiting for clickhouse with correct replica count\"\n    sleep 5\n    continue\n  fi\n  break\ndone\necho \"clickhouse ready, starting schema migrator now\"\n"],"env":[{"name":"CLICKHOUSE_HOST","value":"my-release-clickhouse"},{"name":"CLICKHOUSE_PORT","value":"9000"},{"name":"CLICKHOUSE_HTTP_PORT","value":"8123"},{"name":"CLICKHOUSE_CLUSTER","value":"cluster"},{"name":"CLICKHOUSE_USER","value":"admin"},{"name":"CLICKHOUSE_PASSWORD","value":"27ff0399-0d3a-4bd8-919d-17c2181e6fb9"},{"name":"CLICKHOUSE_SECURE","value":"false"},{"name":"CLICKHOUSE_VERSION","value":"24.1.2"},{"name":"CLICKHOUSE_SHARDS","value":"4"},{"name":"CLICKHOUSE_REPLICAS","value":"2"}],"image":"docker.io/clickhouse/clickhouse-server:24.1.2-alpine","imagePullPolicy":"IfNotPresent","name":"my-release-signoz-schema-migrator-ch-ready","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"restartPolicy":"OnFailure","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"conditions":[{"lastProbeTime":"2024-09-12T07:24:54Z","lastTransitionTime":"2024-09-12T07:24:54Z","message":"Job has reached the specified backoff limit","reason":"BackoffLimitExceeded","status":"True","type":"Failed"}],"failed":1,"ready":0,"terminating":0,"uncountedTerminatedPods":{}}}
  creationTimestamp: "2024-09-12T07:57:20Z"
  generation: 1
  labels:
    app.kubernetes.io/component: schema-migrator-upgrade
    app.kubernetes.io/info: Maoshu
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: signoz
  name: my-release-signoz-schema-migrator-upgrade
  namespace: platform
  resourceVersion: "7926030"
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: schema-migrator-upgrade
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: signoz
        batch.kubernetes.io/job-name: my-release-signoz-schema-migrator-upgrade
        job-name: my-release-signoz-schema-migrator-upgrade
    spec:
      containers:
      - args:
        - --dsn
        - tcp://$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)@my-release-clickhouse:9000
        - --replication
        env:
        - name: CLICKHOUSE_HOST
          value: my-release-clickhouse
        - name: CLICKHOUSE_PORT
          value: "9000"
        - name: CLICKHOUSE_HTTP_PORT
          value: "8123"
        - name: CLICKHOUSE_CLUSTER
          value: cluster
        - name: CLICKHOUSE_USER
          value: admin
        - name: CLICKHOUSE_PASSWORD
          value: 27ff0399-0d3a-4bd8-919d-17c2181e6fb9
        - name: CLICKHOUSE_SECURE
          value: "false"
        image: docker.io/signoz/signoz-schema-migrator:0.102.4
        imagePullPolicy: IfNotPresent
        name: schema-migrator
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - until wget --user "$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)" --spider -q
          my-release-clickhouse:8123/ping; do echo -e "waiting for clickhouseDB";
          sleep 5; done; echo -e "clickhouse ready, starting schema migrator now";
        env:
        - name: CLICKHOUSE_HOST
          value: my-release-clickhouse
        - name: CLICKHOUSE_PORT
          value: "9000"
        - name: CLICKHOUSE_HTTP_PORT
          value: "8123"
        - name: CLICKHOUSE_CLUSTER
          value: cluster
        - name: CLICKHOUSE_USER
          value: admin
        - name: CLICKHOUSE_PASSWORD
          value: 27ff0399-0d3a-4bd8-919d-17c2181e6fb9
        - name: CLICKHOUSE_SECURE
          value: "false"
        image: docker.io/busybox:1.35
        imagePullPolicy: IfNotPresent
        name: my-release-signoz-schema-migrator-init
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - sh
        - -c
        - |
          echo "Running clickhouse ready check"
          while true
          do
            version="$(CLICKHOUSE_VERSION)"
            shards="$(CLICKHOUSE_SHARDS)"
            replicas="$(CLICKHOUSE_REPLICAS)"
            current_version="$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user "${CLICKHOUSE_USER}" --password "${CLICKHOUSE_PASSWORD}" -q "SELECT version()")"
            if [ -z "$current_version" ]; then
              echo "waiting for clickhouse to be ready"
              sleep 5
              continue
            fi
            if [ -z "$(echo "$current_version" | grep "$version")" ]; then
              echo "expected version: $version, current version: $current_version"
              echo "waiting for clickhouse with correct version"
              sleep 5
              continue
            fi
            current_shards="$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user "${CLICKHOUSE_USER}" --password "${CLICKHOUSE_PASSWORD}" -q "SELECT count(DISTINCT(shard_num)) FROM system.clusters WHERE cluster = '${CLICKHOUSE_CLUSTER}'")"
            if [ -z "$current_shards" ]; then
              echo "waiting for clickhouse to be ready"
              sleep 5
              continue
            fi
            if [ "$current_shards" -ne "$shards" ]; then
              echo "expected shard count: $shards, current shard count: $current_shards"
              echo "waiting for clickhouse with correct shard count"
              sleep 5
              continue
            fi
            current_replicas="$(clickhouse client --host ${CLICKHOUSE_HOST} --port ${CLICKHOUSE_PORT} --user "${CLICKHOUSE_USER}" --password "${CLICKHOUSE_PASSWORD}" -q "SELECT count(DISTINCT(replica_num)) FROM system.clusters WHERE cluster = '${CLICKHOUSE_CLUSTER}'")"
            if [ -z "$current_replicas" ]; then
              echo "waiting for clickhouse to be ready"
              sleep 5
              continue
            fi
            if [ "$current_replicas" -ne "$replicas" ]; then
              echo "expected replica count: $replicas, current replica count: $current_replicas"
              echo "waiting for clickhouse with correct replica count"
              sleep 5
              continue
            fi
            break
          done
          echo "clickhouse ready, starting schema migrator now"
        env:
        - name: CLICKHOUSE_HOST
          value: my-release-clickhouse
        - name: CLICKHOUSE_PORT
          value: "9000"
        - name: CLICKHOUSE_HTTP_PORT
          value: "8123"
        - name: CLICKHOUSE_CLUSTER
          value: cluster
        - name: CLICKHOUSE_USER
          value: admin
        - name: CLICKHOUSE_PASSWORD
          value: 27ff0399-0d3a-4bd8-919d-17c2181e6fb9
        - name: CLICKHOUSE_SECURE
          value: "false"
        - name: CLICKHOUSE_VERSION
          value: 24.1.2
        - name: CLICKHOUSE_SHARDS
          value: "4"
        - name: CLICKHOUSE_REPLICAS
          value: "2"
        image: docker.io/clickhouse/clickhouse-server:24.1.2-alpine
        imagePullPolicy: IfNotPresent
        name: my-release-signoz-schema-migrator-ch-ready
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
